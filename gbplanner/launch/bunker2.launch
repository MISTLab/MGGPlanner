<launch>
  <!-- All settings -->
  <arg name="robot_name" default="smb"/>
  <arg name="gazebo_gui_en" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="rviz_en" default="true" />
  <arg name="launch_prefix" default=""/> <!-- gdb -ex run //args -->
  <!-- <param name="use_sim_time" value="$(arg use_sim_time)"/> -->

  <!-- Config files -->
  <arg name="gbplanner_config_file" default="$(find gbplanner)/config/$(arg robot_name)/gbplanner_config.yaml"/>
  <arg name="pci_file" default="$(find gbplanner)/config/$(arg robot_name)/planner_control_interface_sim_config.yaml"/>
  <arg name="voxblox_config_file" default="$(find gbplanner)/config/$(arg robot_name)/voxblox_sim_config.yaml"/>
  <arg name="map_config_file" default="$(arg voxblox_config_file)"/>
  <!-- <arg name="world_file" default="$(find planner_gazebo_sim)/worlds/niosh_osrf.world"/> -->
  <!-- <arg name="world_file" default="$(find planner_gazebo_sim)/worlds/darpa_cave_01.world"/> -->
  <!-- <arg name="world_file" default="$(find planner_gazebo_sim)/worlds/pittsburgh_mine.world"/> -->

  <!-- Static TF -->
  <node pkg="tf" type="static_transform_publisher" name="tf_53" args="0 0 0 0 0 0 map navigation 100" />

   <!--- Vector nav IMU -->
    <include file="$(find rover_launch)/launch/vectornav.launch" />

    <!--- Launch Ouster lidar node -->
    <include file="$(find rover_launch)/launch/ouster_bunker.launch">
    	<arg name="timestamp_mode"           value="TIME_FROM_ROS_TIME"/> <!--TIME_FROM_PTP_1588-->
        <arg name="viz"     value = "false" />
    </include>

    <include file="$(find lvi_sam)/launch/include/module_sam_agx.launch" />
    
    <!-- Launch robot body filter node to filter lidar points -->
    <node name="laser_filter" pkg="rover_launch" type="robot_bodyfilter" output="screen">
	<param name="lidarScanTopic" type="string" value="/os_cloud_node/points" />
    </node>

    <!--- AGX state publisher -->
    <include file="$(find lvi_sam)/launch/include/module_robot_state_publisher_bunker.launch" />

    <!-- Launch robot driver without the default Joystick node for local planner -->
    <include file ="$(find rover_launch)/launch/bunker_base.launch" />

    <!-- Launch the ROSBuzz scout adapter -->
    <node pkg="kh4_adapter" type="bunker_adapter.py" name="ROSBuzz_Adapter" output="screen" />

    <!-- GUI Connector node -->
    <node name="viz_commander_server" pkg="rover_launch" type="viz_commander_server.py" output="screen">
        <param name="robot_name" type="string" value="Bunker2"/>
    </node>

    <!-- Neighbour graph broadcaster node -->
    <node pkg="rover_launch" type="neigh_msg_broadcaster.py" name="neigh_msg_broadcaster_node" output="screen">
      <param name="robot_int_id" value="3"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="tf_lidar" args="0.0 0 0.0 0 0 0 ouster_link os_sensor 10" />
    <node pkg="tf" type="static_transform_publisher" name="tf_baselink_filtered" args="0 0 0.0 0 0 0 base_link base_link_filtered 10" /> 



  <!-- <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find planner_gazebo_sim)/models:$(find subt_cave_sim)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_file)"/>
		<arg name="paused" value="false"/>
		<arg name="use_sim_time" value="true"/>
		<arg name="gui" value="$(arg gazebo_gui_en)"/>
		<arg name="headless" value="false"/>
		<arg name="debug" value="false"/>
    <arg name="verbose" value="false"/>
	</include> -->

  <!-- <include file="$(find smb_gazebo)/launch/spawn_smb.launch">
    <arg name="joystick" value="true"/>
    <arg name="x" value="0.0" />
    <arg name="y" value="0.0" />
    <arg name="z" value="0.5" />
  </include> -->

  <!-- <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find smb_path_tracker)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="/cmd_vel"/>
    <remap from="external/cmd_vel" to="smb_velocity_controller/cmd_vel"/>
  </node> -->

  <!-- Spawn human control nodes -->
  <!-- <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/> -->


  <!-- <node name="smb_teleop_twist_joy_node" pkg="smb_teleop_twist_joy" type="smb_teleop_twist_joy_node" output="screen">
    <remap from="cmd_vel" to="joy_teleop/cmd_vel"/>
    <param name="max_velocity_angular" value="1.5"/>
    <param name="max_velocity_linear" value="1"/>
  </node> -->


  <include file="$(find smb_path_tracker)/launch/pure_pursuit_tracker.launch">
    <arg name="robot_frame" value="base_link"/>
    <arg name="world_frame" value="map"/>
  </include>

  <!-- <node pkg="topic_tools" type="relay" name="vlp_relay" args="/velodyne_points /input_pointcloud" /> -->
  <node pkg="topic_tools" type="relay" name="top_lidar_relay" args="/os_cloud_node/points_filtered /input_pointcloud" />

  <arg name="odometry_topic" default="/lvi_sam/lidar/mapping/odometry"/>
  <node name="pose_throttler" type="throttle" pkg="topic_tools" args="messages $(arg robot_name)/ground_truth/pose_with_covariance 10 /msf_core/pose" />
  <!-- Graph based planning -->
  <node pkg="gbplanner" type="gbplanner_node" name="gbplanner_node" output="screen" launch-prefix="$(arg launch_prefix)">
    <remap from="odometry" to="$(arg odometry_topic)" />
    <remap from="/pointcloud" to="/input_pointcloud" />
    <rosparam command="load" file="$(arg gbplanner_config_file)" />
    <rosparam command="load" file="$(arg map_config_file)" />
    <param name="PlanningParams/robot_id" value="3"/>
  </node>
 
    <!-- record bags -->
    <include file ="$(find rover_launch)/launch/record_bag.launch" />

  <!-- Planner and Control Interface -->
  <node pkg="pci_general" type="pci_general_ros_node" name="pci_general_ros_node" output="screen">
    <remap from="command/trajectory" to="$(arg robot_name)/command/trajectory" />
    <remap from="planner_server" to="gbplanner" />
    <remap from="planner_homing_server" to="gbplanner/homing" />
    <remap from="odometry" to="$(arg odometry_topic)"/>
    <rosparam command="load" file="$(arg pci_file)" />
  </node>

  <!-- <node pkg="rviz" type="rviz" name="gbplanner_ui" output="screen" args="-d $(find gbplanner)/config/rviz/smb.rviz"/> -->

</launch>
